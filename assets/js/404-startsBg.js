document.addEventListener("DOMContentLoaded",()=>{const canvas=document.getElementById("starsCanvas"),renderer=new THREE.WebGLRenderer({canvas:canvas,antialias:!0});renderer.setSize(window.innerWidth,window.innerHeight);const scene=new THREE.Scene,camera=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.1,2e3);camera.position.z=1e3;const colorPalette=[16711680,65280,255,16711935,65535,16776960],starCount=6e4,starField=createStarField();scene.add(starField);const nebula=createNebula();scene.add(nebula);let mouseX=0,mouseY=0;function createStarField(){const geometry=new THREE.BufferGeometry,positions=new Float32Array(18e4),colors=new Float32Array(18e4),sizes=new Float32Array(6e4);for(let i=0;i<6e4;i++){const i3=3*i;positions[i3]=2e3*(Math.random()-.5),positions[i3+1]=2e3*(Math.random()-.5),positions[i3+2]=2e3*(Math.random()-.5);const color=new THREE.Color(colorPalette[Math.floor(Math.random()*colorPalette.length)]);colors[i3]=color.r,colors[i3+1]=color.g,colors[i3+2]=color.b,sizes[i]=2*Math.random()+1}geometry.setAttribute("position",new THREE.BufferAttribute(positions,3)),geometry.setAttribute("color",new THREE.BufferAttribute(colors,3)),geometry.setAttribute("size",new THREE.BufferAttribute(sizes,1));const material=new THREE.PointsMaterial({size:2,sizeAttenuation:!0,vertexColors:!0,blending:THREE.AdditiveBlending,transparent:!0,opacity:.8});return new THREE.Points(geometry,material)}function createNebula(){const geometry=new THREE.SphereGeometry(500,60,60),material=new THREE.MeshBasicMaterial({color:1973790,opacity:.1,transparent:!0,wireframe:!0,blending:THREE.AdditiveBlending});return new THREE.Mesh(geometry,material)}function animate(){requestAnimationFrame(animate);const positions=starField.geometry.attributes.position.array;for(let i=0;i<6e4;i++){const i3=3*i,x=positions[i3],y=positions[i3+1],z=positions[i3+2],distance=Math.sqrt(x*x+y*y+z*z),angle=.002,cosAngle=Math.cos(angle),sinAngle=Math.sin(angle),radialSpeed=-.2*(2e3-distance)/2e3;positions[i3]=cosAngle*x-sinAngle*y+radialSpeed*x/distance,positions[i3+1]=sinAngle*x+cosAngle*y+radialSpeed*y/distance,positions[i3+2]=z+radialSpeed*z/distance,distance<50&&(positions[i3]=2e3*(Math.random()-.5),positions[i3+1]=2e3*(Math.random()-.5),positions[i3+2]=2e3*(Math.random()-.5));const dx=500*mouseX-x,dy=500*mouseY-y,mouseDistance=Math.sqrt(dx*dx+dy*dy);if(mouseDistance<150){const attractionFactor=2e-4*(150-mouseDistance);positions[i3]+=dx*attractionFactor,positions[i3+1]+=dy*attractionFactor}}starField.geometry.attributes.position.needsUpdate=!0,starField.rotation.x+=4e-4,starField.rotation.y+=4e-4,nebula.rotation.x+=2e-4,nebula.rotation.y+=2e-4,renderer.render(scene,camera)}document.addEventListener("mousemove",e=>{mouseX=e.clientX/window.innerWidth*2-1,mouseY=-e.clientY/window.innerHeight*2+1}),animate(),window.addEventListener("resize",()=>{camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix(),renderer.setSize(window.innerWidth,window.innerHeight)})});